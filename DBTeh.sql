-- MySQL Script generated by MySQL Workbench
-- 04/22/15 17:00:51
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Clients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Clients` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `Surname` VARCHAR(45) NULL,
  `Adress` VARCHAR(100) NULL,
  `Phone_number` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Clerks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Clerks` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Username` VARCHAR(45) NULL,
  `Password` VARCHAR(45) NULL,
  `Name` VARCHAR(45) NULL,
  `Surname` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Couriers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Couriers` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Company_name` VARCHAR(45) NULL,
  `Contact_nr` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Orders` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Client_ID` INT NOT NULL,
  `Clerk_ID` INT NOT NULL,
  `Courier_ID` INT NULL,
  `Total_price` DOUBLE NULL,
  `Purchase_date` DATETIME NULL,
  PRIMARY KEY (`ID`, `Clerk_ID`, `Client_ID`),
  INDEX `ClientID_idx` (`Client_ID` ASC),
  INDEX `Clerk_ID_idx` (`Clerk_ID` ASC),
  INDEX `Courier_ID_idx` (`Courier_ID` ASC),
  CONSTRAINT `Client_ID`
    FOREIGN KEY (`Client_ID`)
    REFERENCES `mydb`.`Clients` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Clerk_ID`
    FOREIGN KEY (`Clerk_ID`)
    REFERENCES `mydb`.`Clerks` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Courier_ID`
    FOREIGN KEY (`Courier_ID`)
    REFERENCES `mydb`.`Couriers` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Suppliers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Suppliers` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Company_name` VARCHAR(45) NULL,
  `Contact_nr` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Products` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Supplier_ID` INT NULL,
  `Name` VARCHAR(45) NULL,
  `Category` VARCHAR(45) NULL,
  `Subcategory` VARCHAR(45) NULL,
  `Price` DOUBLE NULL,
  `Count` INT NULL,
  PRIMARY KEY (`ID`),
  INDEX `Supplier_ID_idx` (`Supplier_ID` ASC),
  CONSTRAINT `Supplier_ID`
    FOREIGN KEY (`Supplier_ID`)
    REFERENCES `mydb`.`Suppliers` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Selection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Selection` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Order_ID` INT NOT NULL,
  `Product_ID` INT NOT NULL,
  `ProductCount` INT NULL,
  PRIMARY KEY (`ID`, `Order_ID`, `Product_ID`),
  INDEX `Order_ID_idx` (`Order_ID` ASC),
  INDEX `Product_ID_idx` (`Product_ID` ASC),
  CONSTRAINT `Order_ID`
    FOREIGN KEY (`Order_ID`)
    REFERENCES `mydb`.`Orders` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Product_ID`
    FOREIGN KEY (`Product_ID`)
    REFERENCES `mydb`.`Products` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `mydb` ;

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`Orderlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Orderlist` (`ID` INT, `Client_ID` INT, `Clerk_ID` INT, `Courier_ID` INT, `Total_price` INT, `Purchase_date` INT);

-- -----------------------------------------------------
-- View `mydb`.`Orderlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Orderlist`;
USE `mydb`;
CREATE  OR REPLACE VIEW `Orderlist` AS
SELECT * FROM Orders;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
USE `mydb`;

DELIMITER $$
USE `mydb`$$
CREATE TRIGGER `after_selection_insert` AFTER INSERT ON `Selection` FOR EACH ROW

BEGIN
SELECT Price FROM Products WHERE ID = NEW.ID INTO price;
UPDATE Orders 
SET 
    Total_price = Total_price + (price * NEW.ProductCount)
WHERE
    ID = NEW.ID;
END
$$


DELIMITER ;
